apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/server-snippet: |
      access_by_lua_block {
        local redis = require "resty.redis"
        local red = redis:new()
        red:set_timeout(1000)  -- 1 second timeout

        local user_token = ngx.req.get_headers()["X-User-Key"]
        if not user_token then
          ngx.log(ngx.ERR, "Missing X-User-Key header")
          return
        end

        local redis_key = "session:" .. user_token

        local ok, err = red:connect("host.docker.internal", 6379)
        if not ok then
          ngx.log(ngx.ERR, "Failed to connect Redis: ", err)
          return ngx.exit(500)
        end

        local res, err = red:get(redis_key)
        if res and res ~= ngx.null then
          ngx.req.set_header("X-From-Redis", res)
        else
          ngx.req.set_header("X-From-Redis", "")
        end
      }
spec:
  rules:
  - http:
      paths:
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 3000
      - path: /product
        pathType: Prefix
        backend:
          service:
            name: product-service
            port:
              number: 4005
      - path: /order
        pathType: Prefix
        backend:
          service:
            name: order-service
            port:
              number: 4003
